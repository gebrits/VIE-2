function removeElement(a,b){if(jQuery.isArray(a)){jQuery.each(a,function(c){if(a[c]===b){a.splice(c,1);return false}})}}var PseudoGuid=new (function(){this.empty="VIE2-00000000-0000-0000-0000-000000000000";this.GetNew=function(){var a=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1).toUpperCase()};return("VIE2-"+a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a())}})();Connector=function(b,a){if(b===undefined){throw"The connector constructor needs an 'id'!"}if(typeof b!=="string"){throw"The connector constructor needs an 'id' of type 'string'!"}this.id=b;this._options=(a)?a:{};jQuery.VIE2.registerConnector(this)};Connector.prototype.options=function(a){if(a){jQuery.extend(true,this._options,a)}else{return this._options}};Connector.prototype.analyze=function(a,b,c){jQuery.VIE2.log("info","VIE2.Connector("+this.id+")#analyze()","Not overwritten!");c(jQuery.rdf())};Connector.prototype.query=function(b,a,c,d){jQuery.VIE2.log("info","VIE2.Connector("+this.id+")#query()","Not overwritten!");d({})};Connector.prototype.annotate=function(a,c,b,d){jQuery.VIE2.log("info","VIE2.Connector("+this.id+")#annotate()","Not overwritten!");d({})};Connector.prototype.remove=function(a,c,b,d){jQuery.VIE2.log("info","VIE2.Connector("+this.id+")#remove()","Not overwritten!");d({})};Mapping=function(c,a,b){if(c===undefined){throw"The mapping constructor needs an 'id'!"}if(typeof c!=="string"){throw"The mapping constructor needs an 'id' of type 'string'!"}if(a===undefined){throw"The mapping constructor needs 'types'!"}this.id=c;this.types=a;this.defaultProps=(b)?b:[];jQuery.VIE2.registerMapping(this)};(function(a,b){a.widget("VIE2.vie2",{options:{localEntities:[]},_create:function(){var d=this;jQuery.each(jQuery("html").xmlns(),function(f,e){jQuery.VIE2.namespaces[f]=e.toString()});jQuery.each(jQuery.VIE2.connectors,function(){if(this.options()["namespaces"]){jQuery.each(this.options()["namespaces"],function(f,e){jQuery.VIE2.namespaces[f]=e})}});if(!d.element.data("vie2-id")){jQuery.VIE2.log("info","VIE2.core#create()","No element id specified, generate one dynamically and add it!");var c=PseudoGuid.GetNew();jQuery.VIE2.log("info","VIE2.core#create()","Generated id: '"+c+"'!");d.element.data("vie2-id",c)}this._initNamespaces(jQuery.VIE2.globalContext)},_setOption:function(c,d){if(c==="namespaces"){jQuery.extend(true,jQuery.VIE2.namespaces,d);this._initNamespaces(jQuery.VIE2.globalContext)}else{jQuery.Widget.prototype._setOption.apply(this,[c,d])}},_initNamespaces:function(c){jQuery.each(jQuery.VIE2.namespaces,function(e,d){c.prefix(e,d)})},analyze:function(e){var d=this;if(e===b){jQuery.VIE2.log("warn","VIE2.core#analyze()","No callback method specified!")}jQuery.VIE2.log("info","VIE2.core#analyze()","Start.");var c=[];jQuery.each(jQuery.VIE2.connectors,function(){c.push(this.id)});jQuery.each(jQuery.VIE2.connectors,function(){var f=function(h,g){return function(i){jQuery.VIE2.log("info","VIE2.core#analyze()","Received RDF annotation from connector '"+h.id+"'!");d._initNamespaces(i);i.databank.triples().each(function(){jQuery.VIE2.globalContext.add(this)});jQuery.each(i.databank.subjectIndex,function(m,k){var l=[];i.where(m+" a ?type").each(function(){var n=jQuery.createCurie(this.type.value,{namespaces:jQuery.VIE2.namespaces});l.push(n)});var j=m.toString();if(d.options.localEntities.indexOf(j)===-1){d.options.localEntities.push(j)}jQuery.VIE2.addBBEntity({id:m,a:l})});removeElement(c,h.id);if(c.length===0){jQuery.VIE2.log("info","VIE2.core#analyze()","Finished! Global context holds now "+jQuery.VIE2.globalContext.databank.triples().length+" triples!");jQuery.VIE2.log("info","VIE2.core#analyze()","Finished! Local context holds now "+d.options.localEntities.length+" entities!");if(e){e.call(g,"ok")}}}}(this,d.element);jQuery.VIE2.log("info","VIE2.core#analyze()","Starting analysis with connector: '"+this.id+"'!");this.analyze(d.element,d.options.namespaces,f)})},annotate:function(f){var e=this;var d=this.element;if(f===b){jQuery.VIE2.log("warn","VIE2.core#annotate()","No triple specified, returning without action!");return this}var c=jQuery.rdf({namespaces:jQuery.VIE2.namespaces});if(!jQuery.isArray(f)){return this.annotate([f],d)}else{jQuery.each(f,function(h,g){var j=f[h];if(typeof j==="string"){j=jQuery.rdf.triple(j,{namespaces:jQuery.VIE2.namespaces})}else{}c.add(j)})}jQuery.VIE2.log("info","VIE2.core#annotate()","Start.");c.databank.triples().each(function(){var i=this;if(i.object.type==="literal"){var g=false;var h=c.where(i.subject.toString()+" "+i.property.toString()+" "+i.object.toString());console.log("GGGGGG"+h.length)}jQuery.VIE2.globalContext.add(this)});jQuery.each(c.databank.subjectIndex,function(h,g){var i=this;jQuery.each(i,function(j){var k=i[j];jQuery.each(jQuery.VIE2.Backbone,function(n,m){var l=h.toString();var p=this["collection"].get(l);if(e.options.localEntities.indexOf(l)===-1){e.options.localEntities.push(l)}if(p){var o=jQuery.createCurie(k.property.value,{namespaces:jQuery.VIE2.namespaces});if(p.defaults[o]){p.trigger("change:"+o);p.change();jQuery.VIE2.log("info","VIE2.core#annotate()","Added value to entity '"+p.id+"' '"+o+"' '"+k.object.toString()+"'!")}}})})});jQuery.each(c.databank.subjectIndex,function(i,g){var h=[];c.where(i+" a ?type").each(function(){var j=jQuery.createCurie(this.type.value,{namespaces:jQuery.VIE2.namespaces});h.push(j)});jQuery.VIE2.addBBEntity({id:i,a:h})});jQuery.VIE2.log("info","VIE2.core#annotate()","End.");jQuery.VIE2.log("info","VIE2.core#annotate()","Global context holds now "+jQuery.VIE2.globalContext.databank.triples().length+" triples!");if(d){jQuery.VIE2.log("info","VIE2.core#annotate()","Local cache of element '"+d.data("vie2-id")+"' holds now "+e.options.localEntities.length+" entities!")}return this},uris:function(){return this.options.localEntities},copy:function(c){var d=this;if(!c){jQuery.VIE2.log("warn","VIE2.core#copy()","Invoked 'copy()' without target element!");return}jQuery.VIE2.log("info","VIE2.core#copy()","Start.");jQuery.VIE2.log("info","VIE2.core#copy()","Found "+this.options.localEntities.length+" entities for source ("+this.element.data("vie2-id")+").");a(c).vie2().vie2("option","localEntities",this.options.localEntities);jQuery.VIE2.log("info","VIE2.core#copy()","Finished.");jQuery.VIE2.log("info","VIE2.core#copy()","Target element has now "+a(c).vie2("option","localEntities")+" entities.");return this},clear:function(){this.options.localConext={};return this}})}(jQuery));jQuery.VIE2.namespaces={};jQuery.VIE2.globalContext=jQuery.rdf({namespaces:jQuery.VIE2.namespaces});jQuery.VIE2.getFromGlobalContext=function(b,c){var a=[];jQuery.VIE2.globalContext.where(jQuery.rdf.pattern(b,c,"?object",{namespaces:jQuery.VIE2.namespaces})).each(function(){a.push(this.object)});return a};jQuery.VIE2.setPropertyInGlobalContext=function(b,d,a){var c=jQuery.VIE2.getFromGlobalContext(b,d)};jQuery.VIE2.query=function(g,e,h,b,f){var a={};jQuery.VIE2.log("info","$.VIE2.query()","Start!");if(g===undefined||e===undefined){jQuery.VIE2.log("warn","$.VIE2.query()","Invoked 'query()' with undefined argument(s)!");h(a);return}else{if(!jQuery.isArray(e)){jQuery.VIE2.query(g,[e],h,b);return}}if(typeof g==="string"&&jQuery.isArray(e)){for(var c=0;c<e.length;c++){a[e[c]]=[]}if(!b||(b&&!b.cache==="nocache")){for(var c=0;c<e.length;c++){jQuery.VIE2.globalContext.where(jQuery.rdf.pattern(g,e[c],"?object",{namespaces:jQuery.VIE2.namespaces})).each(function(){a[e[c]].push(this.object)})}}if(b&&b.cache==="cacheonly"){h(a);return}var d=[];jQuery.each(jQuery.VIE2.connectors,function(){d.push(this.id)});jQuery.each(jQuery.VIE2.connectors,function(){jQuery.VIE2.log("info","$.VIE2.query()","Start with connector '"+this.id+"' for uri '"+g+"'!");var i=function(m,l,j,n,k){return function(o){jQuery.VIE2.log("info","$.VIE2.query()","Received query information from connector '"+m.id+"' for uri '"+l+"'!");jQuery.extend(true,j,o);removeElement(d,m.id);if(d.length===0){jQuery.each(j,function(q,p){for(var r=0;r<p.length;r++){jQuery.VIE2.globalContext.add(jQuery.rdf.triple(l,q,p[r],{namespaces:jQuery.VIE2.namespaces}))}});jQuery.VIE2.log("info","$.VIE2.query()","Finished task: 'query()' for uri '"+l+"'!");jQuery.VIE2.log("info","$.VIE2.query()","Global context now holds "+jQuery.VIE2.globalContext.databank.triples().length+" triples!");if(k){jQuery.VIE2.log("info","$.VIE2.query()","Local cache of element '"+k.data("vie2-id")+"' holds now "+k.vie2("option","localContext").databank.triples().length+" triples!")}console.log(j);n.call(j)}}}(this,g,a,h,f);this.query(g,e,jQuery.VIE2.namespaces,i)})}else{h(a)}};jQuery.VIE2.clearContext=function(){jQuery.VIE2.globalContext=jQuery.rdf({namespaces:jQuery.VIE2.namespaces})};jQuery.VIE2.log=function(c,a,b){switch(c){case"info":console.info(a+" "+b);break;case"warn":console.warn(a+" "+b);break;case"error":console.error(a+" "+b);break}};jQuery.VIE2.connectors={};jQuery.VIE2.registerConnector=function(a){if(!jQuery.VIE2.connectors[a.id]){jQuery.VIE2.connectors[a.id]=a;if(a._options.namespaces){jQuery.each(a._options.namespaces,function(c,b){jQuery.VIE2.globalContext.prefix(c,b)});$(".VIE2-vie2").vie2("option","namespaces",a._options.namespaces)}jQuery.VIE2.log("info","VIE2.core#registerConnector()","Registered connector '"+a.id+"'")}else{jQuery.VIE2.log("warn","VIE2.core#registerConnector()","Did not register connector, as there isalready a connector with the same id registered.")}};jQuery.VIE2.unregisterConnector=function(a){jQuery.VIE2.connectors[connector.id]=undefined};VIE.EntityManager.initializeCollection();jQuery.VIE2.Entities=VIE.EntityManager.entities;jQuery.VIE2.Backbone={};jQuery.VIE2.Collection=VIE.RDFEntityCollection.extend({add:function(b,a){VIE.RDFEntityCollection.prototype.add.call(this,b,a)},remove:function(b,a){VIE.RDFEntityCollection.prototype.remove.call(this,b,a)}});jQuery.VIE2.Entity=VIE.RDFEntity.extend({lookup:function(a){if(!jQuery.isArray(a)){this.lookup([a])}else{jQuery.VIE2.query(this.id,a,function(b){return function(){jQuery.each(a,function(c){b.trigger("change:"+a[c]);b.change()})}}(this))}},get:function(a){return jQuery.VIE2.getFromGlobalContext(this.getSubject(),a)},set:function(a,c){if(!c||!c.silent){var b=this;jQuery.each(a,function(e,d){jQuery.VIE2.setPropertyInGlobalContext(b.id,e,d);b.trigger("change:"+e)});b.change()}else{VIE.RDFEntity.prototype.set.call(this,a,c)}},unset:function(a,b){VIE.RDFEntity.prototype.unset.call(this,a,b)},destroy:function(a){VIE.RDFEntity.prototype.destroy.call(this,a)},clear:function(a){VIE.RDFEntity.prototype.clear.call(this,a)}});jQuery.VIE2.addBBEntity=function(a){if(VIE.EntityManager.getBySubject(a.id)!==undefined){$.VIE2.log("info","$.VIE2.addBBEntity()","Entity "+a.id+" already registered, no need to add it.");return}$.VIE2.log("info","$.VIE2.addBBEntity()","Entity "+a.id+" needs to be registered.");jQuery.each(jQuery.VIE2.Backbone,function(d,g){var f=false;jQuery.each(g.a,function(){var e=jQuery.inArray(this.toString(),a.a);if(jQuery.inArray(this.toString(),a.a)>=0){f=true;return false}});if(f){if(g.collection.get(a.id)){g.collection.get(a.id).change();jQuery.VIE2.log("warn","VIE2.core#addBBEntity()","Entity with id '"+a.id+"' already exists as a backbone model!")}else{var h=g.collection.model;var c=new h(a);VIE.EntityManager.registerModel(c);g.collection.add(c);jQuery.VIE2.log("info","VIE2.core#addBBEntity()","Added entity '"+a.id+"' to collection of type '"+d+"'!");var b=g.mapping;jQuery.VIE2.log("info","VIE2.core#addBBEntity()","Querying for default properties for entity '"+a.id+"': ["+b.defaultProps.join(", ")+"]!");jQuery.VIE2.query(c.getSubject(),b.defaultProps,function(j,i,e){return function(){jQuery.VIE2.log("info","VIE2.core#addBBEntity()","Finished querying for default properties for entity '"+j+"': ["+i.join(", ")+"]!");e.change()}}(a.id,b.defaultProps,c))}}})};jQuery.VIE2.registerMapping=function(a){if(!jQuery.VIE2.Backbone[a.id]){jQuery.VIE2.log("info","VIE2.core#registerMapping()","Registered mapping '"+a.id+"'");var c={};jQuery.each(a.defaultProps,function(e){c[a.defaultProps[e]]=[]});var d=jQuery.VIE2.Entity.extend({defaults:c});var b=jQuery.VIE2.Collection.extend({model:d});jQuery.VIE2.Backbone[a.id]={a:(jQuery.isArray(a.types))?a.types:[a.types],collection:new b(),mapping:a};jQuery.VIE2.log("info","VIE2.core#registerMapping()","Registered mapping '"+a.id+"' finished!")}else{jQuery.VIE2.log("warn","VIE2.core#registerMapping()","Did not register mapping, as there isalready a mapping with the same id registered.")}};jQuery.VIE2.unregisterMapping=function(a){jQuery.VIE2.Backbone[a]=undefined};$(document).vie2();